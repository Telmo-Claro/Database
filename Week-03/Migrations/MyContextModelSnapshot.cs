// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Week_03.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("ManagerID")
                        .HasColumnType("uuid");

                    b.HasKey("Name");

                    b.HasIndex("ManagerID")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Model.Employee", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("SupervisorID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Model.Project", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Number"));

                    b.Property<string>("OtherDetails")
                        .HasColumnType("text");

                    b.HasKey("Number");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Model.WorksOn", b =>
                {
                    b.Property<int>("ProjectNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("uuid");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.HasKey("ProjectNumber", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorksOn");
                });

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.HasOne("Model.Employee", "Manager")
                        .WithOne("Department")
                        .HasForeignKey("Model.Department", "ManagerID");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Model.Employee", b =>
                {
                    b.HasOne("Model.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorID");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Model.WorksOn", b =>
                {
                    b.HasOne("Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Employee", b =>
                {
                    b.Navigation("Department")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
